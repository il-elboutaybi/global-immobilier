"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = void 0;
const https = require("https"); // Importing the https module instead of http
const timers_1 = require("timers");
const errors_1 = require("../errors");

/**
 * @internal
 */
function get(url, options = {}) {
    return new Promise((resolve, reject) => {
        /* eslint-disable prefer-const */
        let timeoutId;
        const request = https // Using https.get instead of http.get
            .get(url, options, response => {
                response.setEncoding('utf8');
                let body = '';
                response.on('data', chunk => (body += chunk));
                response.on('end', () => {
                    clearTimeout(timeoutId); // Changed clearTimeout to clearTimeout
                    resolve({ status: response.statusCode, body });
                });
            })
            .on('error', error => {
                clearTimeout(timeoutId); // Changed clearTimeout to clearTimeout
                reject(error);
            })
            .end();
        timeoutId = setTimeout(() => {
            request.destroy(new errors_1.MongoCryptKMSRequestNetworkTimeoutError(`request timed out after 10 seconds`));
        }, 10000);
    });
}
exports.get = get;
